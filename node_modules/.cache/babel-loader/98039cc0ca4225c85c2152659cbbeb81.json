{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/todo-application/src/pages/CreateBucket/CreateBucket.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport './CreateBucket.css';\n\nconst CreateBucket = props => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n  const [isBucketAdded, setIsBucketAdded] = useState(false);\n  const [nameOfBuckets, setNameOfBuckets] = useState(\"\");\n  const [bucketDate, setBucketDates] = useState(\"\");\n  const NameOfBuckets = React.useRef();\n  const BucketDate = React.useRef();\n  const userId = currentUser.uid; // to use history function\n\n  const history = useHistory();\n  useEffect(() => {\n    setIsBucketAdded(false);\n  }, [isBucketAdded]);\n\n  const addBucketToDBHandler = event => {\n    event.preventDefault();\n\n    if (NameOfBuckets.current.value.length === 0 || BucketDate.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents.json`, {\n        bucketName: nameOfBuckets,\n        bdate: bucketDate\n      }).then(response => {\n        alert(\"Bucket added succesfully\");\n        history.push(\"/\");\n        setIsBucketAdded(true);\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"createbucket bg-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border shadow p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"pb-3 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Create a Board\"), formIncompleteError ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 43\n    }\n  }, \"Kindly complete the form before adding the Bucket\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addBucketToDBHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"exampleInputEmail1\",\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Enter a name of your bucket:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active-pink-2 active-pink \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"bucketname\",\n    type: \"text\",\n    name: \"bucketname\",\n    class: \"form-control\",\n    placeholder: \"eg Frontend Bucket\",\n    ref: NameOfBuckets,\n    onChange: event => setNameOfBuckets(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"bdate\",\n    type: \"date\",\n    name: \"bdate\",\n    class: \"form-control\",\n    ref: BucketDate,\n    onChange: event => setBucketDates(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"createBucket\",\n    class: \"btn btn-warning\",\n    disabled: formComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Submit\")))))));\n};\n\nexport default withRouter(CreateBucket);","map":{"version":3,"sources":["/home/wws/Desktop/todo-application/src/pages/CreateBucket/CreateBucket.js"],"names":["React","useState","useEffect","useContext","Axios","AuthContext","withRouter","useHistory","CreateBucket","props","currentUser","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","isBucketAdded","setIsBucketAdded","nameOfBuckets","setNameOfBuckets","bucketDate","setBucketDates","NameOfBuckets","useRef","BucketDate","userId","uid","history","addBucketToDBHandler","event","preventDefault","current","value","length","post","bucketName","bdate","then","response","alert","push","catch","error","console","log","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport './CreateBucket.css'\n\nconst CreateBucket = (props) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const [formComplete, setFormComplete] = useState(false);\n    const [formIncompleteError, setFormIncompleteError] = useState(false);\n    const [isBucketAdded, setIsBucketAdded] = useState(false);\n\n    const [nameOfBuckets, setNameOfBuckets] = useState(\"\");\n    const [bucketDate, setBucketDates] = useState(\"\");\n\n\n    const NameOfBuckets  = React.useRef();\n    const BucketDate  = React.useRef();\n\n    const userId = currentUser.uid;\n\n    // to use history function\n    const history = useHistory();\n\n    useEffect(() => {\n        setIsBucketAdded(false);\n      }, [isBucketAdded]);\n\n    \n    const addBucketToDBHandler = (event) => {\n        event.preventDefault();\n        if(NameOfBuckets.current.value.length === 0 || BucketDate.current.value.length === 0){\n        setFormComplete(false);\n        setFormIncompleteError(true);\n        } else {\n        // add column name in firebase\n        Axios.post(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents.json`, {\n            bucketName: nameOfBuckets,\n            bdate: bucketDate,    \n            \n        })\n            .then((response) => {\n                alert(\"Bucket added succesfully\");\n                history.push(\"/\");\n                setIsBucketAdded(true);\n            })\n            .catch((error) => console.log(error));\n\n        }\n    };\n\n    return(\n\n    <section className=\"createbucket bg-black\">\n    <div className=\"container\">\n    \n        \n        <div className=\"row justify-content-center\">\n            \n                <div className=\"col-lg-10\">\n                    <div className=\"border shadow p-4\">\n                    <h2 className=\"pb-3 text-white\">Create a Board</h2>\n                    {formIncompleteError ?<div class=\"alert alert-danger\" role=\"alert\">Kindly complete the form before adding the Bucket</div> : null}\n                    <form  onSubmit={addBucketToDBHandler}>\n                    <div class=\"form-group1\">\n                        <label for=\"exampleInputEmail1\" className=\"text-white\">Enter a name of your bucket:</label>\n                        <div className=\"active-pink-2 active-pink \">\n                        <input id=\"bucketname\" type=\"text\" name=\"bucketname\" class=\"form-control\" placeholder=\"eg Frontend Bucket\" ref={NameOfBuckets}  onChange={(event) => setNameOfBuckets(event.target.value)}/>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\" className=\"text-white\">Password</label>\n                        <input id=\"bdate\" type=\"date\" name=\"bdate\" class=\"form-control\" ref={BucketDate}  onChange={(event) => setBucketDates(event.target.value)}/>\n                    </div>\n                    <button type=\"submit\" id=\"createBucket\" class=\"btn btn-warning\" disabled={formComplete}>Submit</button>\n                    </form>\n                    </div>\n                </div>\n    \n        </div>\n    </div>\n    </section>\n\n    );\n\n}\n\n\nexport default withRouter(CreateBucket);\n"]},"metadata":{},"sourceType":"module"}