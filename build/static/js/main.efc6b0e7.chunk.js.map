{"version":3,"sources":["components/Header/logo.jpg","common/Loader/assets/loader.gif","config/Fire.js","common/Loader/Loader.js","context/Auth.js","components/Header/Header.js","pages/AllBuckets/AllBuckets.js","common/Backdrop/Backdrop.js","common/Modal/Modal.js","components/Todo/Todo.js","pages/Bucket/Bucket.js","pages/CreateBucket/CreateBucket.js","pages/LoginRegister/LoginRegister.js","common/guards/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","Loader","className","src","Spinner","alt","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","Provider","value","withRouter","useContext","to","logo","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-hidden","id","activeClassName","onClick","signOut","AllBuckets","bucketContents","setbucketContents","showBucket","setShowBucket","userId","uid","document","title","getBucketContents","Axios","get","then","response","setTimeout","data","catch","error","console","log","Object","entries","map","item","key","bucketName","pathname","state","bucketId","role","Backdrop","style","Modal","props","close","modalCloseHandler","this","content","Component","Todo","month","showModal","setShowModal","showDetails","setShowDetails","postTitle","setPostTitle","postDescription","setPostDescription","scheduleDate","setScheduleDate","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","postName","setPostName","postDetail","setPostDetail","postDate","setPostDate","postData","setPostData","isPostAdded","setIsPostAdded","isPostDelete","setIsPostDelete","isPostEdited","setIsPostEdited","editDetails","setEditDetails","todoId","setPostId","postTitles","useRef","postDescriptions","scheduleDates","today","Date","day","getMonth","getDate","date","getFullYear","getPostData","email","modalContent","color","htmlFor","defaultValue","placeholder","ref","onChange","event","target","min","disabled","e","current","length","put","alert","post","showmodalContent","window","confirm","delete","class","postId","onPostClick","name","match","params","history","useHistory","location","push","boardTitle","isBucketAdded","setIsBucketAdded","nameOfBuckets","setNameOfBuckets","bucketDate","setBucketDates","NameOfBuckets","BucketDate","onSubmit","preventDefault","bdate","setEmail","password","setPassword","formTitle","setFormTitle","fireErrors","setFireErrors","loginBtn","setLoginBtn","getAction","action","errorNotification","submitBtn","signInWithEmailAndPassword","message","createUserWithEmailAndPassword","login_register","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","path","exact","CreateBucket","Bucket","LoginRegister","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efc6b0e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bc49ddcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loader.1c9bd439.gif\";","import firebase from 'firebase';\nrequire(\"firebase/database\");\nrequire(\"firebase/auth\");\n\nconst config = {\n    apiKey: \"AIzaSyBGfZXfrS0-VlUkcjyjuppyNnpyvbvyLMM\",\n    authDomain: \"todo-app-a1032.firebaseapp.com\",\n    databaseURL: \"https://todo-app-a1032.firebaseio.com\",\n    projectId: \"todo-app-a1032\",\n    storageBucket: \"todo-app-a1032.appspot.com\",\n    messagingSenderId: \"470447132223\",\n    appId: \"1:470447132223:web:3b552d97e6ddf37618728a\",\n  };\n\nconst fire = firebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n\nexport default fire;","import React from 'react';\nimport Spinner from './assets/loader.gif';\n\n\nfunction Loader() {\n    return (\n       \n        <section className=\"loader-section bg-black\">\n        <div className=\"text-center  spinner\">\n        <img src={Spinner} className=\"img-fluid\" alt=\"loading\"/>\n        </div>\n        </section>\n        \n    )\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport fire from '../config/Fire';\nimport  Loader  from '../common/Loader/Loader';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fire.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n\n  if(loading){\n    return <Loader />\n  }\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, {useContext} from 'react';\nimport {NavLink , withRouter } from \"react-router-dom\";\n// import $ from \"jquery\";\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport './Header.css';\nimport logo from './logo.jpg';\n\nconst Header=()=> {\n  const { currentUser } = useContext(AuthContext);\n\n\n  return (\n  \n      <>\n        {currentUser ? (\n            <nav className=\"navbar navbar-expand-lg bg-orange fixed-top\">\n            <div className=\"container-fluid\">\n                <NavLink to=\"/\" className=\"navbar-brand\"><img src={logo} width=\"50\" className=\"img-fluid\" alt=\"Responsive\"/><span className=\"logo-text\">TODO</span></NavLink>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto w-100 justify-content-end clearfix\">\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/CreateBucket\" activeClassName=\"selected\"><i className=\"fa fa-book pr-2\" aria-hidden=\"true\"></i>Create Bucket</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=>fire.auth().signOut()}><i className=\"fa fa-sign-out pr-2\" aria-hidden=\"true\"></i>Logout</a>\n                        </li>\n                    </ul>\n                </div>\n            \n            </div>\n\t\t\t\n      </nav>\n      ) : (\n      <div></div>\n       \n      )}\n      </>\n  );\n\n\n\n  \n}\n\n\nexport default withRouter(Header);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/Loader/Loader\";\nimport { AuthContext } from '../../context/Auth';\nimport './AllBuckets.css'\n\nexport const AllBuckets = () => {\n\n    const { currentUser } = useContext(AuthContext);\n\n    const [bucketContents, setbucketContents] = useState({});\n    const [showBucket, setShowBucket] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const userId = currentUser.uid;\n\n    document.title = \"ToDo Application\";\n\n    useEffect(() => {\n        getBucketContents();\n    }, [showBucket]);\n  \n    const getBucketContents = () => {\n        Axios\n        .get(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents.json`)\n        .then((response) => {\n          setTimeout(setbucketContents(response.data), 50000);\n          setLoading(false);\n          if (bucketContents !== null) {\n            setShowBucket(true);\n          } else setShowBucket(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <section className=\"all-buckets bg-black py-5\">\n              <div className=\"container-fluid\">\n              <h3 className=\"text-warning py-3\">Buckets</h3>\n                <div className=\"bucket-data\">\n                    \n                        {showBucket ? (\n                        <div className=\"row\">\n                            {bucketContents &&\n                            Object.entries(bucketContents).map((item) => (\n                              \n                                <div className=\"col-lg-3\" key={item[1].bucketName}>\n                                  <Link\n                                      to={{\n                                          pathname: \"/bucket/\" + item[1].bucketName,\n                                          state: {\n                                          bucketId: item[0],\n                                          },\n                                      }}\n                                      >\n                                    <div className=\"bucket-box border bg-black shadow rounded my-3 p-5\">\n                                        <h5 className=\"text-center text-white\">{item[1].bucketName}</h5>\n                                    </div>\n                                    </Link>\n                                </div>\n                                 \n                            ))}\n                        </div>\n                        ) : (\n                        <div className=\"alert alert-warning\" role=\"alert\">\n                            You haven't created any buckets. Kindly click on the 'Create\n                            Bucket' button in the navigation bar to create a Bucket.!\n                        </div>\n                        )}\n              </div>\n              </div>\n            </section>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default AllBuckets;\n","import React from 'react';\n\nconst Backdrop = () => {\n    return (\n        <div style={{'width':'100%', 'height': '100%', 'backgroundColor': 'rgba(0,0,0,0.5)', 'zIndex': 100, 'position':'fixed','left': 0,'top': 0}}></div>\n    )\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './Modal.css';\n\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    render() {\n      \n        return (\n            <div>\n                <Backdrop />\n                <div className=\"modalbody mt-5\">\n                <button className=\"closebutton mt-3 mr-2\" onClick = {() => this.props.close(this.props.modalCloseHandler)}>X</button>\n                    {this.props.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport  \"./Todo.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\n\nfunction Todo(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const {bucketId} = props;\n  \n  const [showModal, setShowModal] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postDescription, setPostDescription] = useState(\"\");\n  const [scheduleDate, setScheduleDate] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const [postName, setPostName] = useState(\"\");\n  const [postDetail, setPostDetail] = useState(\"\");\n  const [postDate, setPostDate] = useState(\"\");\n\n  const [postData, setPostData] = useState(\"\");\n  const [isPostAdded, setIsPostAdded] = useState(false);\n  const [isPostDelete, setIsPostDelete] = useState(false);\n  const [isPostEdited, setIsPostEdited] = useState(false);\n\n  const [editDetails, setEditDetails] = useState(false);\n  const [todoId, setPostId] = useState(\"\");\n\n  const postTitles  = React.useRef();\n  const postDescriptions  = React.useRef();\n  const scheduleDates  = React.useRef();\n\n  const userId = currentUser.uid;\n \n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = day + \"-\" + month + \"-\" + today.getFullYear();\n\n    useEffect(() => {\n      setIsPostAdded(false);\n      setIsPostDelete(false);\n      setIsPostEdited(false);\n      getPostData(currentUser.email);\n    }, [isPostAdded, isPostDelete, isPostEdited, currentUser]);\n\n    const getPostData = (email) => {\n      Axios\n      .get(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents/${bucketId}/todo.json`)\n      .then((response) => {\n        setPostData(response.data)\n        // setPostData(Object.entries(response.data).filter((e)=>(e.user === email)));\n        // console.log(response);\n      })\n      .catch((error) => console.log(error));\n  };\n  \n//  to Add and Edit cardData in DB\nconst handleAddPostData = (e) => {\n  //   check if all input is taken\n  if(postTitles.current.value.length === 0 || postDescriptions.current.value.length === 0  || scheduleDates.current.value.length === 0 ){\n    setFormComplete(false);\n    setFormIncompleteError(true);\n  } else {\n    // if user wants to edit then put request is used\n    if (editDetails) {\n      Axios\n      .put(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents/${bucketId}/todo/${todoId}.json`,\n        {\n          postName: postName === \"\" ? postTitle : postName,\n          postDetail: postDetail === \"\" ? postDescription : postDetail,\n          postDate: postDate === \"\" ? scheduleDate : postDate,\n          user: currentUser.email,\n        }\n      )\n        .then((response) => {\n          alert(\"ToDo edited succesfully\");\n          setIsPostEdited(true);\n        })\n        .catch((error) => console.log(\"Error in editDetails\" + error));\n    }\n    //  if user wants to add a new card\n    else {\n      Axios\n      .post(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents/${bucketId}/todo.json`,\n        {\n          postName: postName,\n          postDetail: postDetail,\n          postDate: postDate,\n          user: currentUser.email,\n        }\n      )\n        .then((response) => {\n          alert(\"ToDo added succesfully\");\n          setIsPostAdded(true);\n        })\n        .catch((error) => console.log(\"Error\" + error));\n    }\n\n    setShowModal(false);\n    setEditDetails(false);\n\n    setPostName(\"\");\n    setPostDetail(\"\");\n    setPostDate(\"\");\n  }\n};\n\n  // on click of card this function shows details\n  const onPostClick = (\n    postTitle,\n    postDescription,\n    scheduleDate,\n    postId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setPostTitle(postTitle);\n    setPostDescription(postDescription);\n    setScheduleDate(scheduleDate);\n    setPostId(postId);\n  };\n\n   // handles edit button click\n const handleEdit = (e) => {\n  setShowDetails(false);\n  setShowModal(true);\n  setEditDetails(true);\n};\n\n\n\n  // handles archive on card archive click\n  const handleDelete = (e) => {\n    if (window.confirm(\"Are you sure you want to delete the ToDo?\")) {\n    Axios\n    .delete(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents/${bucketId}/todo/${todoId}.json`)\n      .then((response) => {\n        alert(\"ToDo deleted succesfully\");\n        setIsPostDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n      setShowDetails(false);\n    }\n  };\n\n\n\n  const  modalCloseHandler = () => { setShowModal(false); setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n    <div className=\"container py-4\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-left\">\n          <h3 className=\"text-warning\">{editDetails ? 'Edit ToDo' : 'Add ToDo'}</h3>\n          {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"postTitle\" className=\"text-white\">Title</label>\n          <input type=\"text\" id=\"post_title\" defaultValue={editDetails ? postTitle : \"\"} placeholder=\"Enter a title\" ref={postTitles} onChange={(event) => setPostName(event.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label htmlFor=\"postDescription\" className=\"text-white\">Description</label>\n          <textarea type=\"text\" id=\"post_description\" defaultValue={editDetails ? postDescription : \"\"} placeholder=\"Enter a Description\" ref={postDescriptions} onChange={(event) => setPostDetail(event.target.value)} className=\"form-control\"></textarea>\n        </div> \n        <div className=\"form-group\">\n          <label htmlFor=\"schedule\" className=\"text-white\">Date</label>\n          <input type=\"date\" id=\"schedule_date\" min={date} defaultValue={editDetails ? scheduleDate : \"\"} ref={scheduleDates} onChange={(event) => setPostDate(event.target.value)} className=\"form-control\"/>\n        </div>\n        <button disabled={formComplete} className=\"btn btn-warning\" onClick={handleAddPostData}>{editDetails ? 'Edit ToDo' : 'Add ToDo'}</button>\n        </div>\n      </div>\n    </div>\n\n  \n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n  <div className=\"container my-4\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n          <div className=\"d-flex justify-content-between\">\n            <div> \n                <h3 className=\"text-left text-warning\">View ToDo</h3>\n            </div>\n            <div>\n                <button type=\"button\" id=\"editBtn\" className=\"btn btn-sm btn-warning\" onClick={handleEdit}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\n                <button type=\"button\" id=\"deleteBtn\" className=\"btn btn-danger btn-sm ml-2\" onClick={handleDelete}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"text-left my-4\">\n            <h4>Title</h4>\n            <p>{postTitle}</p>\n          </div>\n          <div className=\"text-left my-4\">\n            <h4>Description</h4>\n            <p>{postDescription}</p>\n          </div>\n          <div className=\"text-left my-4\">\n            <h4>Date</h4>\n            <p>{scheduleDate}</p>\n          </div>\n      </div>\n      </div>\n      </div>\n      </>\n     \n  )\n  :null;\n\n  return (\n    <div className=\"todo-data bg-black pt-3\">\n      <div className=\"d-flex justify-content-between border p-2 shadow \">\n          <div className=\"pt-2\">\n              <h4 className=\"text-white\">Add To-Do</h4>\n          </div>\n          <div>\n              <button className=\"btn btn-warning\" onClick={() => setShowModal(true)}><i class=\"fa fa-plus-square\" aria-hidden=\"true\"></i></button>\n          </div>\n      </div>\n\n      <div className=\"todo-list my-4\">\n     \n      {postData ?\n        Object.entries(postData).map((item) => (\n       \n        <div className=\"d-flex justify-content-between border p-2 shadow my-3\">\n            <div>\n              <h5 className=\"text-white\" key={item[0]}>{item[1].postName}</h5>\n              <small className=\"text-info\">{item[1].postDate}</small>\n            </div>\n            <div>\n              <button  id={item[0]} value={item[1].postName} onClick={(e) =>\n                    onPostClick(\n                      item[1].postName,\n                      item[1].postDetail,\n                      item[1].postDate,\n                      item[0],\n                      e\n                    )\n                  } className=\"btn btn-transparent mt-2\"><i className=\"text-white fa fa-list\" aria-hidden=\"true\"></i></button>\n            </div>\n        </div>\n       \n        ) ) : <div className=\"alert alert-warning\" role=\"alert\">No todo added!</div>\n        }\n\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n\n\n   \n)\n}\n\nexport default Todo;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from 'axios';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { AuthContext } from '../../context/Auth';\nimport Todo from \"../../components/Todo/Todo\";\nimport './Bucket.css';\n\nexport const Bucket = (props) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const name = props.match.params.bucketName;\n\n    // const bucketid = props.match.params.bucketId;\n    // console.log(bucketid);\n\n    const userId = currentUser.uid;\n    \n   \n\n     // to use history function\n    const history = useHistory();\n\n    document.title = `${name} | ToDo App`;\n\n    useEffect(() => {\n    \n    }, []);\n  \n\n\n\n\n      // handle bucket delete\n    const handleBucketDelete = (e) => {\n      if (window.confirm(\"Are you sure you want to delete the bucket?\")) {\n        Axios\n        .delete(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents/${props.location.state.bucketId}.json`)\n          .then((response) => {\n            alert(\"bucket deleted succesfully\");\n            history.push(\"/\");\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n    };\n\n\n\n    return (\n        <>\n            <section className=\"bg-black\">\n            <div className=\"container bucket-section\">\n\n              <div className=\"d-flex justify-content-between\">\n                <div>\n                    <h3  className=\"text-warning\">{name}</h3>\n                </div>\n                <div>\n                    <button className=\"btn btn-sm btn-danger\" onClick={handleBucketDelete}>Delete Bucket</button>\n                </div>\n              </div>\n              \n              <div className=\"row\">\n                  <div className=\"col-lg-12 todo-list\">\n                      <Todo\n                        pathname={props.location.pathname}\n                        bucketId={props.location.state.bucketId}\n                        boardTitle={name}\n                      ></Todo>\n                  </div>\n              </div>\n\n            </div>\n            </section>\n       \n        </>\n      );\n    }\n    \n\nexport default withRouter(Bucket);\n","import React, { useState, useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport './CreateBucket.css'\n\nconst CreateBucket = (props) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const [formComplete, setFormComplete] = useState(false);\n    const [formIncompleteError, setFormIncompleteError] = useState(false);\n    const [isBucketAdded, setIsBucketAdded] = useState(false);\n\n    const [nameOfBuckets, setNameOfBuckets] = useState(\"\");\n    const [bucketDate, setBucketDates] = useState(\"\");\n\n\n    const NameOfBuckets  = React.useRef();\n    const BucketDate  = React.useRef();\n\n    const userId = currentUser.uid;\n\n    // to use history function\n    const history = useHistory();\n\n    useEffect(() => {\n        setIsBucketAdded(false);\n      }, [isBucketAdded]);\n\n    \n    const addBucketToDBHandler = (event) => {\n        event.preventDefault();\n        if(NameOfBuckets.current.value.length === 0 || BucketDate.current.value.length === 0){\n        setFormComplete(false);\n        setFormIncompleteError(true);\n        } else {\n        // add column name in firebase\n        Axios.post(`https://todo-app-a1032.firebaseio.com/${userId}/bucketContents.json`, {\n            bucketName: nameOfBuckets,\n            bdate: bucketDate,    \n            \n        })\n            .then((response) => {\n                alert(\"Bucket added succesfully\");\n                history.push(\"/\");\n                setIsBucketAdded(true);\n            })\n            .catch((error) => console.log(error));\n\n        }\n    };\n\n    return(\n\n    <section className=\"createbucket bg-black\">\n    <div className=\"container\">\n    \n        \n        <div className=\"row justify-content-center\">\n            \n                <div className=\"col-lg-10\">\n                    <div className=\"border shadow p-4\">\n                    <h2 className=\"pb-3 text-white\">Create a Bucket</h2>\n                    {formIncompleteError ?<div class=\"alert alert-danger\" role=\"alert\">Kindly complete the form before adding the Bucket</div> : null}\n                    <form  onSubmit={addBucketToDBHandler}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\" className=\"text-white\">Enter a name of your bucket:</label>\n                        <input id=\"bucketname\" type=\"text\" name=\"bucketname\" class=\"form-control\" placeholder=\"eg Frontend Bucket\" ref={NameOfBuckets}  onChange={(event) => setNameOfBuckets(event.target.value)}/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"text-white\">Date</label>\n                        <input id=\"bdate\" type=\"date\" name=\"bdate\" className=\"form-control\" ref={BucketDate}  onChange={(event) => setBucketDates(event.target.value)}/>\n                    </div>\n                    <button type=\"submit\" id=\"createBucket\" className=\"btn btn-warning\" disabled={formComplete}>Submit</button>\n                    </form>\n                    </div>\n                </div>\n    \n        </div>\n    </div>\n    </section>\n\n    );\n\n}\n\n\nexport default withRouter(CreateBucket);\n","import React, { useState, useContext } from 'react';\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport logo from '../../components/Header/logo.jpg';\nimport './LoginRegister.css';\n\n\nfunction LoginRegister(props) {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formTitle, setFormTitle] = useState('Login');\n  const [fireErrors, setFireErrors] = useState(\"\");\n  const [loginBtn, setLoginBtn] = useState(true);\n\n\n  const login = (event) => {\n    event.preventDefault();\n    fire.auth().signInWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const register = (event) => {\n    event.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const getAction = action => {\n      if(action === 'reg'){\n            setFormTitle('Register New User');\n            setLoginBtn(false);\n            setFireErrors('');\n      }else{\n            setFormTitle('Login');\n            setLoginBtn(true);\n            setFireErrors('');\n      }\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  \n  \n\n  let errorNotification = fireErrors ? \n  (<div className=\"alert alert-danger\" role=\"alert\">{fireErrors}</div>) : null;\n\n  let submitBtn = loginBtn ?\n  (<button  type=\"submit\" className=\"loginBtn btn btn-warning\" onClick={login} >Enter</button>) :\n  (<button  type=\"submit\" className=\"loginBtn btn btn-warning\" onClick={register} >Register</button>);\n\n  let login_register = loginBtn ? \n  (<button  className=\"loginBtn btn btn-warning float-right\" onClick={() => getAction('reg')}>Register</button>) :\n  (<button  className=\"loginBtn btn btn-warning float-right\" onClick={() => getAction('login')}>Login</button>);\n\n  return(\n    <div className=\"authentication\">\n    <div className=\"container py-5\">\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-5 col-lg-5\">\n              <div className=\"d-flex justify-content-center\">\n                  <img src={logo} width=\"50\" className=\"mr-1 img-fluid\" alt=\"Responsive\"/><h1 className=\"title \">ToDo Appictaion</h1><img src={logo} width=\"50\" className=\"ml-1 img-fluid\" alt=\"Responsive\"/>\n                </div>\n                <div className=\"mt-5 px-5 py-5 bg-black border shadow rounded signup-box\">\n                <h2 className=\"text-center\">{formTitle}</h2>\n                <div>{errorNotification}</div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" className=\"text-white\">Email address</label>\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={email} placeholder=\"Enter a email\" onChange={(event) => setEmail(event.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"text-white\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={password} placeholder=\"Enter a password\" onChange={(event) => setPassword(event.target.value)}/>\n                    </div>\n                    {submitBtn}\n                    {login_register}\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n\n}\n\nexport default withRouter(LoginRegister);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../../context/Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, children, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={'/LoginRegister'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from \"./components/Header/Header\";\nimport AllBuckets from \"./pages/AllBuckets/AllBuckets\";\nimport Bucket from \"./pages/Bucket/Bucket\";\nimport CreateBucket from './pages/CreateBucket/CreateBucket';\nimport LoginRegister from \"./pages/LoginRegister/LoginRegister\";\nimport { AuthProvider } from './context/Auth';\nimport PrivateRoute from './common/guards/PrivateRoute';\nimport './App.css';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n      <Header />\n        <Switch>\n          <PrivateRoute path=\"/\" exact  component = {AllBuckets} />\n          <PrivateRoute path=\"/CreateBucket\" component = {CreateBucket} />\n          <PrivateRoute path=\"/bucket/:bucketName\" component = {Bucket} />\n          <Route path=\"/LoginRegister\" component={LoginRegister} />\n          <Route path=\"*\" render = {() => <h3>Page not Found!</h3>} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}